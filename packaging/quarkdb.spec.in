%define _unpackaged_files_terminate_build 0
%define distribution %(/usr/lib/rpm/redhat/dist.sh --distnum)

#-------------------------------------------------------------------------------
# Custom strip command for CC7
#-------------------------------------------------------------------------------

%if 0%{distribution} == 7
%global __strip /opt/rh/devtoolset-7/root/bin/strip
%endif

#-------------------------------------------------------------------------------
# Package definitions
#-------------------------------------------------------------------------------
Summary: A highly available key-value store
Name: quarkdb
Version: @VERSION_FULL@
Release: 1%{dist}
Prefix: /usr
License: none
Group: Applications/File

Source: %{name}-%{version}.tar.gz
BuildRoot: %{_tmppath}/%{name}-root
BuildRequires: libuuid-devel
BuildRequires: xrootd-server-devel
BuildRequires: xrootd-devel
BuildRequires: xrootd-private-devel
%if %{?fedora:1}%{!?fedora:0}
BuildRequires: cmake >= 3.3
%define cmake_cmd cmake
%else
BuildRequires: cmake3 >= 3.3
%define cmake_cmd cmake3
%endif
BuildRequires: bzip2-devel
BuildRequires: python
BuildRequires: zlib-static
BuildRequires: zlib-devel
BuildRequires: openssl-devel
BuildRequires: libzstd-devel
Requires: libzstd
BuildRequires: lz4-devel
Requires: lz4

%if 0%{distribution} == 7
BuildRequires: centos-release-scl
BuildRequires: devtoolset-7
%endif

BuildRequires: elfutils-devel
Requires: elfutils-devel

Requires: jemalloc
BuildRequires: jemalloc-devel
Requires: xrootd-server

%description
A highly available key-value store.

%prep
%setup -n %{name}-%{version}

%build

%if 0%{distribution} == 7
source /opt/rh/devtoolset-7/enable
%endif

mkdir build
cd build
%{cmake_cmd} ../ -DCMAKE_BUILD_TYPE=RelWithDebInfo -DCMAKE_INSTALL_PREFIX=$RPM_BUILD_ROOT/usr @ROCKSDB_CACHED_BUILD@
%{__make}

%install
cd build
%{__make} install

%clean
rm -rf $RPM_BUILD_ROOT

%files
%defattr(-, root, root, -)
%{_libdir}/libXrdQuarkDB.so
%{_bindir}/quarkdb-tests
%{_bindir}/quarkdb-stress-tests
%{_bindir}/quarkdb-sudo-tests
%{_bindir}/quarkdb-bench
%{_bindir}/quarkdb-create
%{_bindir}/quarkdb-recovery
%{_bindir}/quarkdb-server
%{_bindir}/quarkdb-sst-inspect
