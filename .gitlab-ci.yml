stages:
- koji
- build
- test
- publish

before_script:
  - export GTEST_COLOR="1"

cc7:
  stage: build
  image: gitlab-registry.cern.ch/eos/quarkdb/cc7-enhanced
  script:
    - packaging/gitlab-build.sh
    - mkdir ${CI_JOB_NAME}
    - cp -r /root/rpmbuild/RPMS build/SRPMS ${CI_JOB_NAME}
  artifacts:
    paths:
    - "$CI_JOB_NAME"

fedora:
  stage: build
  image: gitlab-registry.cern.ch/eos/quarkdb/fedora-enhanced
  script:
    - packaging/gitlab-build.sh
    - mkdir ${CI_JOB_NAME}
    - cp -r /root/rpmbuild/RPMS build/SRPMS ${CI_JOB_NAME}
  artifacts:
    paths:
    - "$CI_JOB_NAME"

fedora-tsan:
  stage: build
  image: gitlab-registry.cern.ch/eos/quarkdb/fedora-enhanced
  script:
    - CXXFLAGS='-fsanitize=thread' packaging/gitlab-build.sh
    - mkdir ${CI_JOB_NAME}
    - cp -r /root/rpmbuild/RPMS build/SRPMS ${CI_JOB_NAME}
  artifacts:
    paths:
    - "$CI_JOB_NAME"

ubuntu-asan:
  stage: build
  image: gitlab-registry.cern.ch/eos/quarkdb/ubuntu-enhanced
  script:
    - ci/ubuntu/asan.sh
  artifacts:
    paths:
    - build/coverage-report

cc7-test:
  stage: test
  image: gitlab-registry.cern.ch/eos/quarkdb/cc7-enhanced
  dependencies:
  - cc7
  script:
    - yum -y localinstall cc7/RPMS/*
    - quarkdb-tests
    - quarkdb-stress-tests

fedora-test:
  stage: test
  image: gitlab-registry.cern.ch/eos/quarkdb/fedora-enhanced
  dependencies:
  - fedora
  script:
    - dnf -y install fedora/RPMS/*
    - quarkdb-tests
    - quarkdb-stress-tests

fedora-tsan-test:
  stage: test
  image: gitlab-registry.cern.ch/eos/quarkdb/fedora-enhanced
  dependencies:
  - fedora-tsan
  script:
    - dnf -y install fedora-tsan/RPMS/*
    - export QDB_TEST_TIMEOUT="default"
    - quarkdb-tests
    - export GTEST_TOTAL_SHARDS=10
    - MAX_SHARD=$((GTEST_TOTAL_SHARDS - 1))
    - for i in $(seq 0 ${MAX_SHARD}); do export GTEST_SHARD_INDEX=$i; quarkdb-stress-tests; done
    - for i in {1..30}; do export GTEST_SHARD_INDEX=5; quarkdb-stress-tests; done
  tags:
    - docker-fc25

rpms:
  stage: publish
  image: gitlab-registry.cern.ch/eos/quarkdb/cc7-enhanced
  dependencies:
  - cc7
  - fedora
  script:
   - for platform in cc7 fedora; do sudo -u stci -H packaging/repo-manager.py --action add --base /eos/project/s/storage-ci/www/quarkdb --ref ${CI_COMMIT_REF_NAME} --packages ${platform}/RPMS/* ${platform}/SRPMS/* ; done
  tags:
    - docker-cc7
  retry: 2

docs:
  stage: publish
  image: gitlab-registry.cern.ch/eos/quarkdb/cc7-enhanced
  script:
    - gitbook build
    - chown -R stci _book
    - SNAPSHOT=$(date +%s)
    - TARGET="/eos/project/q/quarkdb/www/docs/${CI_COMMIT_REF_NAME}"
    - STAGING_AREA="$TARGET-${SNAPSHOT}"
    - sudo -u stci -H cp -r _book "$STAGING_AREA"
    - sudo -u stci -H packaging/replace-directory.sh "$STAGING_AREA" "$TARGET"
  tags:
    - docker-cc7
  retry: 2

coverage:
  stage: publish
  image: gitlab-registry.cern.ch/eos/quarkdb/cc7-enhanced
  dependencies:
  - ubuntu-asan
  script:
   - chown -R stci build/coverage-report
   - SNAPSHOT=$(date +%s)
   - TARGET="/eos/project/q/quarkdb/www/coverage/${CI_COMMIT_REF_NAME}"
   - STAGING_AREA="$TARGET-${SNAPSHOT}"
   - sudo -u stci -H cp -r build/coverage-report "$STAGING_AREA"
   - sudo -u stci -H packaging/replace-directory.sh "$STAGING_AREA" "$TARGET"
  tags:
   - docker-cc7
  retry: 2

cc7-koji:
  stage: koji
  image: gitlab-registry.cern.ch/linuxsupport/cc7-base
  script:
    - yum install -y koji --disablerepo=extras
    - yum install -y git rpm-build
    - mkdir ~/.koji
    - cp ci/koji/config ~/.koji
    - echo "${QDBKOJI_PASSWORD}" | kinit qdbkoji
    - packaging/make-srpm.sh
    - koji build --wait quarkdb7 ./build/SRPMS/*.src.rpm
  only:
    - tags
